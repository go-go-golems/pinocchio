name: create-command
short: Generate a pinocchio query
flags:
  - name: additional_system
    type: stringList
    help: Additional system prompt
  - name: additional
    type: stringList
    help: Additional prompt
  - name: prompt
    type: stringFromFile
    help: Prompt for the command
    required: true
  - name: context
    type: fileList
    help: Additional context
  - name: types
    type: stringList
    help: List of types
    default:
      - int
      - file
      - fileList
      - string
      - stringList
      - stringFromFile
      - objectFromFile
      - objectListFromFile
      - stringListFromFile
      - intList
      - float
      - bool
      - floatList
      - choice
      - choiceList
  - name: example_name
    type: string
    help: Name of the example
    default: Generate animal descriptions
  - name: example
    type: stringFromFile
    help: Example of the command
    default: |
      name: animals
      short: Generate animal descriptions.
      flags:
        - name: name
          type: string
          help: Animal name
          required: true
        - name: color
          type: string
          help: Animal color
        - name: species
          type: stringList
          help: Animal species
        - name: additional_system
          type: string
          help: Additional system prompt
          default: ""
        - name: additional
          type: string
          help: Additional prompt
          default: ""
        - name: context
          type: fileList
          help: Additional context from files
        - name: concise
          type: bool
          help: Give concise answers
          default: false
        - name: use_bullets
          type: bool
          help: Use bullet points in the answer
          default: false
        - name: use_keywords
          type: bool
          help: Use keywords in the answer
          default: false
        - name: bracket
          type: bool
          help: Use brackets in the answer
          default: false
      system-prompt: |
          You are an intrepid animalist. You know all species of animals. You write clearly and concisely.
          {{ .additional_system }}
      prompt: |
        {{ define "context" -}}
        {{ .query | join " " }}
        {{ if .additional }}Additional instructions:
        {{ .additional | join "\n" }}{{ end }}
        {{ if .concise }}
        Give a concise answer, answer in a single sentence if possible, skip unnecessary explanations.
        {{- end }}{{ if .use_bullets }}
        Use bullet points in the answer.
        {{- end }}{{ if .use_keywords }}
        Use keywords in the answer, not full sentences.
        {{- end }}
        {{- end }}
        
        Write a description of the animal {{ .name }}.
        {{ if .color }}It is of color {{ .color }}.{{end}}
        {{ if .species }}It is a {{ .species | join ", " }}.{{end}}
      
        The output format is a YAML file with the following structure:
      
        ```yaml
        name: ...
        color: ...
        species: ...
        description: ...
        ```
      
        {{ template "context" . }}
      
        
        {{ if .context}}Additional Context:
        {{ range .context }}
        Path: {{ .Path }}
        ---
        {{ .Content }}
        ---
        {{- end }}
        {{ end }}
      
        {{ if .bracket }}
        {{ template "context" . }}
        {{ end }}

system-prompt: |
  You are an expert prompt engineer tasked with creating a YAML template for
  generating LLM prompts. Your goal is to analyze the given input and create a
  standardized, well-structured YAML template that can be used to generate
  effective prompts for various tasks.
  
  {{ .additional_system | join "\n" }}
prompt: |

  Here is the input text you need to analyze and transform into a YAML template:

  <input_text>
  {{.prompt}}
  </input_text>

  Before creating the final YAML template, please analyze the input text and show your reasoning process in <prompt_analysis> tags. In your analysis:
  1. List out the key components of the input text
  2. Identify which parts of the input can be extracted into a template
  3. Suggest how to rewrite or use the input as guidelines for an effective LLM prompt
  4. Brainstorm potential flags based on the input
  5. Outline the structure of the system prompt and main prompt template
  6. Provide reasoning on how to structure the YAML template based on the input

  After your analysis, create the YAML template according to the following structure:

  ```yaml
  name: 
  short: 
  long: 
  flags:
    - name: 
      type: 
      help: 
      required: 
      default: 
  system-prompt: |

  prompt: |

  ```

  Guidelines for creating the YAML template:
  1. name: Provide a short, descriptive name using lowercase letters and underscores for spaces.
  2. short: Write a brief, one-sentence description of the prompt template's purpose.
  3. long: Write a paragraph-long description of what the prompt is about and its intended use.
  4. flags: List parameters that can customize the prompt. For each flag, include:
    - name: Lowercase with underscores for spaces
    - type: Data type (e.g., {{ .types | join ", " }})
    - help: Short description of the flag's purpose
    - required: Include and set to true if mandatory
    - default: Include a default value if applicable
  5. system-prompt: Write the context-setting system prompt, using {{ .additional_system }} for dynamic content.
  6. prompt: Write the main prompt template, using Go template syntax for control structures and variable interpolation.

  Formatting and style:
  - Use 2-space indentation for nested elements
  - Use lowercase for all flag names and types
  - Use clear and concise language in descriptions and help text
  - Include comments where necessary to explain complex logic or usage

  Always add the following flags:

  ```
    - name: additional-system
      type: stringList
      help: Additional system prompt
    - name: additional
      type: stringList
      help: Additional prompt
    - name: context
      type: fileList
      help: Additional context
  ```

  which are used in the system prompt and in the body: 

  ```
    {{ "{{" }}- .additional | join "\n" }}
  
    {{ "{{" }} if .context}}Additional Context:
    {{ "{{" }} range .context }}
    Path: {{ "{{" }} .Path }}
    ---
    {{ "{{" }} .Content }}
    ---
    {{- "{{" }} end }}
    {{ "{{" }} end }}
  ```

  Ensure that your final YAML template is properly formatted, indented, and addresses all sections according to the instructions above. Present your final YAML template enclosed in <yaml_template> tags.