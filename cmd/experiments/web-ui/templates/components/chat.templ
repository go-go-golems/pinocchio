package components

import "github.com/go-go-golems/pinocchio/cmd/experiments/web-ui/conversation"

templ ChatContainer(clientID string, messages *conversation.WebConversation) {
	<div class="chat-container">
		@ConversationHistory(messages, false)
		@EventContainer(clientID, false)
		<div class="chat-input mt-3">
			@ChatInput(clientID)
		</div>
	</div>
}

templ EventContainer(clientID string, swap bool) {
	<div
		id="event-container"
		class="event-container"
		if swap {
			hx-swap-oob="true"
		}
	>
		<div
			id="events"
			if clientID != "" {
				hx-ext="sse"
				sse-connect={ "/events?client_id=" + clientID }
			}
		>
			<div class="message-group">
				<div class="assistant-response" sse-swap="message"></div>
			</div>
		</div>
	</div>
}

templ ChatInput(clientID string) {
	<form
		hx-post="/chat"
		class="d-flex gap-2"
		hx-swap="outerHTML"
	>
		if clientID != "" {
			<input type="hidden" name="client_id" value={ clientID }/>
		}
		<input
			type="text"
			name="message"
			class="form-control"
			placeholder="Type your message..."
			required
		/>
		<button type="submit" class="btn btn-primary">Send</button>
	</form>
}

templ ConversationHistory(messages *conversation.WebConversation, swap bool) {
	<div
		id="conversation-history"
		if swap {
			hx-swap-oob="#conversation-history"
		}
	>
		if messages != nil {
			for _, msg := range messages.Messages {
				if msg.Type == "chat" {
					if chatMsg, ok := msg.Content.(*conversation.WebChatMessage); ok {
						if chatMsg.Role == "user" {
							@UserMessage(msg.Time, chatMsg.Text)
						} else {
							@AssistantMessage(msg.Time, chatMsg.Text)
						}
					}
				} else if msg.Type == "tool-use" {
					if toolMsg, ok := msg.Content.(*conversation.WebToolUseMessage); ok {
						@ToolUseMessage(msg.Time, toolMsg.Name, toolMsg.Input)
					}
				} else if msg.Type == "tool-result" {
					if toolMsg, ok := msg.Content.(*conversation.WebToolResultMessage); ok {
						@ToolResultMessage(msg.Time, toolMsg.Result)
					}
				}
			}
		}
	</div>
}

templ MessageContainer(msg *conversation.WebMessage) {
	if msg.Type == "chat" {
		if chatMsg, ok := msg.Content.(*conversation.WebChatMessage); ok {
			@UserMessage(msg.Time, chatMsg.Text)
		}
	}
}
